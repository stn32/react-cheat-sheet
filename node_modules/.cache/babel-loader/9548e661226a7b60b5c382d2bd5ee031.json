{"ast":null,"code":"var _jsxFileName = \"/Users/macmx/Documents/GitHub/react-cheat-sheet/src/comp/Comp08.js\";\nimport './comp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comp08(props) {\n  let text1;\n  let text2;\n  let show = false;\n  if (show) {\n    text1 = 'string 1';\n  } else {\n    text1 = 'string 2';\n  }\n  if (show) {\n    text2 = /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"string 1 one\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this);\n  } else {\n    text2 = /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"string 2 two\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comp comp08\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"08\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), \"condition for variable - true/false\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: text1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: text2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_c = Comp08;\nexport default Comp08;\nvar _c;\n$RefreshReg$(_c, \"Comp08\");","map":{"version":3,"names":["Comp08","props","text1","text2","show"],"sources":["/Users/macmx/Documents/GitHub/react-cheat-sheet/src/comp/Comp08.js"],"sourcesContent":["import './comp.css';\n\nfunction Comp08(props) {\n    let text1;\n    let text2;\n    let show = false;\n\n    if (show) {\n        text1 = 'string 1';\n    } else {\n        text1 = 'string 2';\n    }\n\n    if (show) {\n        text2 = <span>string 1 one</span>;\n    } else {\n        text2 = <span>string 2 two</span>;\n    }\n\n    return (\n        <div className=\"comp comp08\">\n            <h3><span>08</span>condition for variable - true/false</h3>\n            <li>{text1}</li>\n            <li>{text2}</li>\n        </div>\n    )\n}\n\nexport default Comp08;"],"mappings":";AAAA,OAAO,YAAY;AAAC;AAEpB,SAASA,MAAM,CAACC,KAAK,EAAE;EACnB,IAAIC,KAAK;EACT,IAAIC,KAAK;EACT,IAAIC,IAAI,GAAG,KAAK;EAEhB,IAAIA,IAAI,EAAE;IACNF,KAAK,GAAG,UAAU;EACtB,CAAC,MAAM;IACHA,KAAK,GAAG,UAAU;EACtB;EAEA,IAAIE,IAAI,EAAE;IACND,KAAK,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAyB;EACrC,CAAC,MAAM;IACHA,KAAK,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAyB;EACrC;EAEA,oBACI;IAAK,SAAS,EAAC,aAAa;IAAA,wBACxB;MAAA,wBAAI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAe;IAAA;MAAA;MAAA;MAAA;IAAA,QAAwC,eAC3D;MAAA,UAAKD;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eAChB;MAAA,UAAKC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QACd;AAEd;AAAC,KAxBQH,MAAM;AA0Bf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module"}